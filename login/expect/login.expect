#!/usr/bin/env expect

# 读取基本配置文件
if { [string length $env(EXPECT_ROOT_PATH)] == 0 } {
    puts "EXPECT_ROOT_PATH is empty. Exiting."
    exit 1
}
source "${env(EXPECT_ROOT_PATH)}/config/jump.expect"

# 设置永不超时
set timeout -1

# 根据用户的选择设置要连接的服务器
if { $argc == 0 } {
    puts "**************************"
    puts "① [lindex $SERVER_LIST 1]"
    puts "② [lindex $SERVER_LIST 2]"
    puts "③ [lindex $SERVER_LIST 3]"
    puts "④ [lindex $SERVER_LIST 4]"
    puts "⑤ [lindex $SERVER_LIST 5]"
    puts "⑥ [lindex $SERVER_LIST 6]"
    puts "⑦ [lindex $SERVER_LIST 7]"
    puts "⑧ [lindex $SERVER_LIST 8]"
    puts "⑨ [lindex $SERVER_LIST 9]"
    puts "⑩ [lindex $SERVER_LIST 10]"
    puts "⑪ [lindex $SERVER_LIST 11]"
    puts "⑫ [lindex $SERVER_LIST 12]"
    puts "⑬ [lindex $SERVER_LIST 13]"
    puts "⑭ [lindex $SERVER_LIST 14]"
    puts "⑮ [lindex $SERVER_LIST 15]"
    puts "⑯ [lindex $SERVER_LIST 16]"
    puts "⑰ [lindex $SERVER_LIST 17]"
    puts "⑱ [lindex $SERVER_LIST 18]"
    puts "⑲ [lindex $SERVER_LIST 19]"
    puts "**************************"
    puts "请选择需要登录的服务器 :"

    expect {
        -re {\d+} {
            set index $expect_out(0,string)
            set SERVER [lindex $SERVER_LIST $index]
        }
        "\n" {
            puts "********************************************"
            puts "请选择正确范围的服务器"
            puts "********************************************"
            exit
        }
    }
} else {
    # 从命令行参数列表中取出第一个参数，然后给变量 SERVER 赋值
    set SERVER [lindex $argv 0]
}

# 提示连接的服务器
puts "您选择的服务器为 : $SERVER"
puts "********************************************"

# 读取服务器配置文件
source "${env(EXPECT_ROOT_PATH)}/servers/$SERVER.expect"

# 通过跳板机连接目标服务器
spawn ssh -p $JUMP_SERVER_PORT $JUMP_SERVER_USER@$JUMP_SERVER \
    -o "ServerAliveInterval=60" \
    -o "StrictHostKeyChecking=no" \
    -o "UserKnownHostsFile /dev/null" \
    -tt \
    "ssh $INTRANET_SERVER_USER@$INTRANET_SERVER -p $INTRANET_SERVER_PORT -o 'StrictHostKeyChecking=no' -o 'UserKnownHostsFile /dev/null' -tt $INTRANET_SERVER_COMMAND"

expect {
        "(yes/no)?"
            {send "yes\n"; exp_continue}
        "s password:"
            {send "$INTRANET_SERVER_PASSWORD\n"; exp_continue}
        "Last login:"
            {send "cd $WORK_DIRECTORY;clear\n"}
        "root@"
            {send "cd $WORK_DIRECTORY;clear\n"}
}
interact